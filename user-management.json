openapi: '3.0.2'
info:
  title: Laravel Socialite Google Authentication API
  version: '1.0'
servers:
  - url: https://api.server.test/v1
paths:
  /auth/google:
    get:
      summary: Redirect ke halaman otentikasi Google
      description: Mengarahkan pengguna ke halaman otentikasi Google menggunakan Laravel Socialite.
      responses:
        '302':
          description: Found
  /auth/google/callback:
    get:
      summary: Handle respons dari Google setelah otentikasi
      description: Menangani respons dari Google setelah pengguna selesai melakukan otentikasi.
      responses:
        '302':
          description: Found
  /auth/user:
    get:
      summary: Mendapatkan informasi pengguna yang sudah terotentikasi
      description: Mengembalikan informasi pengguna yang sudah terotentikasi dengan Google.
      security:
        - google_oauth2: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users:
    get:
      summary: Mendapatkan daftar pengguna
      description: Mengembalikan daftar pengguna yang terdaftar.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Membuat pengguna baru
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{userId}:
    get:
      summary: Mendapatkan informasi pengguna
      parameters:
        - in: path
          name: userId
          required: true
          description: ID pengguna
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Memperbarui informasi pengguna
      parameters:
        - in: path
          name: userId
          required: true
          description: ID pengguna
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Menghapus pengguna
      parameters:
        - in: path
          name: userId
          required: true
          description: ID pengguna
          schema:
            type: integer
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  /auth/register:
    post:
      summary: Registrasi pengguna baru
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /auth/login:
    post:
      summary: Login pengguna
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/logout:
    post:
      summary: Logout pengguna
      description: Logout pengguna yang sudah terotentikasi.
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
  /profile:
    get:
      summary: Mendapatkan informasi profil pengguna
      description: Mendapatkan informasi profil pengguna yang sedang login.
      security:
        - google_oauth2: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
    put:
      summary: Memperbarui informasi profil pengguna
      description: Memperbarui informasi profil pengguna yang sedang login.
      security:
        - google_oauth2: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
components:
  securitySchemes:
    google_oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
          tokenUrl: 'https://oauth2.googleapis.com/token'
          scopes:
            openid: View your email address
            profile: View your basic profile info
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
      required:
        - name
        - email
    UserCreateRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - name
        - email
        - password
    UserUpdateRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
    UserLoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    Error:
      type: object
      properties:
        message:
          type: string
    UserProfile:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
    UserProfileUpdateRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
